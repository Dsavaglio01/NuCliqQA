{"version":3,"sources":["OperationBar.tsx"],"names":["React","StyleSheet","View","editingModeState","useRecoilState","OperationSelection","Crop","Rotate","Blur","OperationBar","editingMode","getOperationWindow","styles","container","position","create","height","width","backgroundColor","justifyContent"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAoCC,UAApC,EAAgDC,IAAhD,QAA4D,cAA5D;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,IAAT,QAAqB,QAArB;AAGA,OAAO,SAASC,YAAT,GAAwB;AAC7B;AACA,QAAM,CAACC,WAAD,IAAgBN,cAAc,CAACD,gBAAD,CAApC;;AAEA,QAAMQ,kBAAkB,GAAG,MAAM;AAC/B,YAAQD,WAAR;AACE,WAAK,MAAL;AACE,4BAAO,oBAAC,IAAD,OAAP;;AACF,WAAK,QAAL;AACE,4BAAO,oBAAC,MAAD,OAAP;;AACF,WAAK,MAAL;AACE,4BAAO,oBAAC,IAAD,OAAP;;AACF;AACE,eAAO,IAAP;AARJ;AAUD,GAXD;;AAaA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC;AAApB,kBACE,oBAAC,kBAAD,OADF,EAEGH,WAAW,KAAK,kBAAhB,iBACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACE,MAAM,CAACC,SAAR,EAAmB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAnB;AAAb,KACGH,kBAAkB,EADrB,CAHJ,CADF;AAUD;AAED,MAAMC,MAAM,GAAGX,UAAU,CAACc,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\r\nimport { Animated, LayoutRectangle, StyleSheet, View } from \"react-native\";\r\nimport { editingModeState } from \"../Store\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { OperationSelection } from \"./OperationSelection\";\r\nimport { Crop } from \"./Crop\";\r\nimport { Rotate } from \"./Rotate\";\r\nimport { Blur } from \"./Blur\";\r\nimport { useState } from \"react\";\r\n\r\nexport function OperationBar() {\r\n  //\r\n  const [editingMode] = useRecoilState(editingModeState);\r\n\r\n  const getOperationWindow = () => {\r\n    switch (editingMode) {\r\n      case \"crop\":\r\n        return <Crop />;\r\n      case \"rotate\":\r\n        return <Rotate />;\r\n      case \"blur\":\r\n        return <Blur />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <OperationSelection />\r\n      {editingMode !== \"operation-select\" && (\r\n        <View style={[styles.container, { position: \"absolute\" }]}>\r\n          {getOperationWindow()}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: 160,\r\n    width: \"100%\",\r\n    backgroundColor: \"#333\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]}