{"version":3,"sources":["Rotate.tsx"],"names":["Rotate","setProcessing","processingState","imageData","setImageData","imageDataState","setEditingMode","editingModeState","originalImageData","React","useState","rotation","setRotation","useEffect","onRotate","angle","uri","rotateUri","width","rotateWidth","height","rotateHeight","ImageManipulator","manipulateAsync","rotate","crop","originX","originY","onClose","direction","webDirection","Platform","OS","rotateBy","styles","container","row","paddingHorizontal","prompt","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","color","fontSize","textAlign"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { StyleSheet, View, Text, Platform, Alert } from \"react-native\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { IconButton } from \"../components/IconButton\";\r\nimport { editingModeState, imageDataState, processingState } from \"../Store\";\r\nimport * as ImageManipulator from \"expo-image-manipulator\";\r\n\r\nexport function Rotate() {\r\n  //\r\n  const [, setProcessing] = useRecoilState(processingState);\r\n  const [imageData, setImageData] = useRecoilState(imageDataState);\r\n  const [, setEditingMode] = useRecoilState(editingModeState);\r\n\r\n  const [originalImageData] = React.useState(imageData);\r\n\r\n  const [rotation, setRotation] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    if (rotation !== 0) {\r\n      onRotate(rotation);\r\n    } else {\r\n      setImageData(originalImageData);\r\n    }\r\n  }, [rotation]);\r\n\r\n  const onRotate = async (angle: number) => {\r\n    setProcessing(true);\r\n    // Rotate the image by the specified angle\r\n    // To get rid of thing white line caused by context its being painted onto\r\n    // crop 1 px border off https://github.com/expo/expo/issues/7325\r\n    const {\r\n      uri: rotateUri,\r\n      width: rotateWidth,\r\n      height: rotateHeight,\r\n    } = await ImageManipulator.manipulateAsync(originalImageData.uri, [\r\n      { rotate: angle },\r\n    ]);\r\n    const { uri, width, height } = await ImageManipulator.manipulateAsync(\r\n      rotateUri,\r\n      [\r\n        {\r\n          crop: {\r\n            originX: 1,\r\n            originY: 1,\r\n            width: rotateWidth - 2,\r\n            height: rotateHeight - 2,\r\n          },\r\n        },\r\n      ]\r\n    );\r\n    setImageData({ uri, width, height });\r\n    setProcessing(false);\r\n  };\r\n\r\n  const onClose = () => {\r\n    // If closing reset the image back to its original\r\n    setImageData(originalImageData);\r\n    setEditingMode(\"operation-select\");\r\n  };\r\n\r\n  const rotate = (direction: \"cw\" | \"ccw\") => {\r\n    const webDirection = Platform.OS === \"web\" ? 1 : -1;\r\n    let rotateBy = rotation - 90 * webDirection * (direction === \"cw\" ? 1 : -1);\r\n    // keep it in the -180 to 180 range\r\n    if (rotateBy > 180) {\r\n      rotateBy = -90;\r\n    } else if (rotateBy < -180) {\r\n      rotateBy = 90;\r\n    }\r\n    setRotation(rotateBy);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={[styles.row, { paddingHorizontal: \"20%\" }]}>\r\n        <IconButton\r\n          iconID=\"rotate-left\"\r\n          text=\"Rotate -90\"\r\n          onPress={() => rotate(\"ccw\")}\r\n        />\r\n        <IconButton\r\n          iconID=\"rotate-right\"\r\n          text=\"Rotate +90\"\r\n          onPress={() => rotate(\"cw\")}\r\n        />\r\n      </View>\r\n      <View style={styles.row}>\r\n        <IconButton iconID=\"close\" text=\"Cancel\" onPress={() => onClose()} />\r\n        <Text style={styles.prompt}>Rotate</Text>\r\n        <IconButton\r\n          iconID=\"check\"\r\n          text=\"Done\"\r\n          onPress={() => setEditingMode(\"operation-select\")}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  prompt: {\r\n    color: \"#fff\",\r\n    fontSize: 21,\r\n    textAlign: \"center\",\r\n  },\r\n  row: {\r\n    width: \"100%\",\r\n    height: 80,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: \"2%\",\r\n  },\r\n});\r\n"]}